name: 'Complete Auth Service Deployment'
description: 'Complete deployment pipeline: secrets, kustomize, and restart'
inputs:
  # Kubernetes config
  kubeconfig:
    description: 'Kubeconfig content'
    required: true
  kustomize-path:
    description: 'Path to Kustomize overlay'
    required: false
    default: 'deploy/overlays/prod/'
  deployment-name:
    description: 'Name of deployment to restart'
    required: false
    default: 'auth-service'
  secret-name:
    description: 'Name of the Kubernetes secret'
    required: false
    default: 'auth-secret'
  namespace:
    description: 'Kubernetes namespace'
    required: false
    default: 'default'
  image-tag:
    description: 'Docker image tag to deploy'
    required: false
    default: 'latest'
  
  # Application secrets
  secrets-json:
    description: 'JSON object containing all application secrets'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
    
    - name: Create Kubernetes Secret
      uses: ./.github/actions/create-k8s-secret
      with:
        secret-name: ${{ inputs.secret-name }}
        secrets-json: ${{ inputs.secrets-json }}
    
    - name: Update image tag in deployment
      shell: bash
      run: |
        if [ "${{ inputs.image-tag }}" != "latest" ]; then
          # Extract the SHA tag from the image tags (format: registry/repo:sha-abcdef)
          SHA_TAG=$(echo "${{ inputs.image-tag }}" | grep -o "sha-[a-f0-9]*" | head -1)
          if [ -n "$SHA_TAG" ]; then
            echo "Updating deployment to use image tag: $SHA_TAG"
            kubectl patch deployment ${{ inputs.deployment-name }} \
              -p '{"spec":{"template":{"spec":{"containers":[{"name":"${{ inputs.deployment-name }}","image":"ghcr.io/nh-homelab/auth-service:'$SHA_TAG'"}]}}}}' \
              --dry-run=client -o yaml | kubectl apply -f -
          fi
        fi
      env:
        KUBECONFIG: ${{ inputs.kubeconfig }}
    
    - name: Deploy to Kubernetes
      uses: ./.github/actions/k8s-deploy
      with:
        kustomize-path: ${{ inputs.kustomize-path }}
        deployment-name: ${{ inputs.deployment-name }}
        kubeconfig: ${{ inputs.kubeconfig }}
        namespace: ${{ inputs.namespace }}
